{"version":3,"sources":["../../../react/Forms adv. 01.11/react_todo-app/src/components/FormForTodoItem.js","../../../react/Forms adv. 01.11/react_todo-app/src/components/TodoItem.js","../../../react/Forms adv. 01.11/react_todo-app/src/App.js","../../../react/Forms adv. 01.11/react_todo-app/src/index.js"],"names":["FormForTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","refField","React","createRef","changeTitle","bind","assertThisInitialized","submitTitle","current","focus","action","setState","target","value","preventDefault","ChangeTitle","react_default","a","createElement","onSubmit","type","onChange","className","ref","onBlur","Component","TodoItem","changeStatus","delete","doubleClicked","ShowOrHideForm","change","todo","destroy","_this$props$todo","id","completed","nameOfClass","input","components_FormForTodoItem","onDoubleClick","htmlFor","concat","onClick","App","localStorage","getItem","JSON","parse","todos","inputValue","counter","kindOfList","AddTodo","changeTodoInput","countHowMuchLeftToDo","destroyTodo","howToShowList","changeKindOfList","changeTodoStatus","changeTitleOfTodo","allCompleted","deleteCompleted","_this$state","prevState","toConsumableArray","reduce","accum","indexTODelete","findIndex","todoItem","UpdatedTodos","splice","_objectSpread","showTodos","arguments","length","undefined","filter","tagName","kindOfShow","href","match","join","index","changeTodos","changebleTodos","completeBool","every","changebleTodo","forEach","_this2","_this$state2","todosForShow","counterLeftToDo","setItem","stringify","placeholder","style","display","map","components_TodoItem","key","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d74e578.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FormForTodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.title,\n    };\n    this.refField = React.createRef();\n    this.changeTitle = this.changeTitle.bind(this);\n    this.submitTitle = this.submitTitle.bind(this);\n  }\n\n  componentDidMount() {\n    this.refField.current.focus();\n  }\n\n  changeTitle(action) {\n    this.setState({ title: action.target.value });\n  }\n\n  submitTitle(action) {\n    action.preventDefault();\n    this.props.ChangeTitle(this.state.title);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitTitle}>\n        <input\n          type=\"text\"\n          value={this.state.title}\n          onChange={this.changeTitle}\n          className=\"edit\"\n          ref={this.refField}\n          onBlur={this.submitTitle}\n        />\n      </form>\n    );\n  }\n}\n\nFormForTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  ChangeTitle: PropTypes.func.isRequired,\n};\n\nexport default FormForTodoItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormForTodoItem from './FormForTodoItem';\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.changeStatus = this.changeStatus.bind(this);\n    this.delete = this.delete.bind(this);\n    this.state = {\n      doubleClicked: false,\n    };\n    this.ShowOrHideForm = this.ShowOrHideForm.bind(this);\n    this.ChangeTitle = this.ChangeTitle.bind(this);\n  }\n\n  changeStatus() {\n    this.props.change(this.props.todo);\n  }\n\n  delete() {\n    this.props.destroy(this.props.todo);\n  }\n\n  ShowOrHideForm() {\n    const { doubleClicked } = this.state;\n\n    this.setState({ doubleClicked: !doubleClicked });\n  }\n\n  ChangeTitle(title) {\n    this.props.changeTitle(this.props.todo, title);\n    this.ShowOrHideForm();\n  }\n\n  render() {\n    const { title, id, completed } = this.props.todo;\n    const { doubleClicked } = this.state;\n    let nameOfClass = completed ? 'completed' : '';\n\n    nameOfClass = doubleClicked ? 'editing' : nameOfClass;\n\n    const input = doubleClicked\n      ? <FormForTodoItem title={title} ChangeTitle={this.ChangeTitle} />\n      : '';\n\n    return (\n      <li className={nameOfClass}>\n        <div className=\"view\">\n          <label\n            onDoubleClick={this.ShowOrHideForm}\n            className={completed ? `completed-label` : ''}\n            htmlFor={`todo-${id}`}\n          >\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={`todo-${id}`}\n              onChange={this.changeStatus}\n              // checked={completed}\n            />\n            {title}\n          </label>\n          <button type=\"button\" className=\"destroy\" onClick={this.delete} />\n        </div>\n        {input}\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  change: PropTypes.func.isRequired,\n  destroy: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './components/TodoItem';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    if (localStorage.getItem('state') !== null) {\n      this.state = JSON.parse(localStorage.getItem('state'));\n    } else {\n      this.state = {\n        todos: [],\n        inputValue: '',\n        counter: 0,\n        kindOfList: 'all',\n      };\n    }\n\n    this.AddTodo = this.AddTodo.bind(this);\n    this.changeTodoInput = this.changeTodoInput.bind(this);\n    this.countHowMuchLeftToDo = this.countHowMuchLeftToDo.bind(this);\n    this.destroyTodo = this.destroyTodo.bind(this);\n    this.howToShowList = this.howToShowList.bind(this);\n    this.changeKindOfList = this.changeKindOfList.bind(this);\n    this.changeTodoStatus = this.changeTodoStatus.bind(this);\n    this.changeTitleOfTodo = this.changeTitleOfTodo.bind(this);\n    this.allCompleted = this.allCompleted.bind(this);\n    this.deleteCompleted = this.deleteCompleted.bind(this);\n  }\n\n  AddTodo(action) {\n    action.preventDefault();\n    const { inputValue, counter } = this.state;\n\n    if (inputValue !== '') {\n      const todo = {\n        title: inputValue,\n        id: counter + 1,\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        todos: [...prevState.todos, todo],\n        counter: counter + 1,\n        inputValue: '',\n      }));\n    }\n  }\n\n  changeTodoInput(action) {\n    this.setState({ inputValue: action.target.value });\n  }\n\n  countHowMuchLeftToDo() {\n    return this.state.todos.reduce((accum, todo) => accum + !todo.completed, 0);\n  }\n\n  destroyTodo(todo) {\n    const indexTODelete = this.state.todos.findIndex(todoItem => (\n      todoItem.id === todo.id\n    ));\n\n    this.setState((prevState) => {\n      const UpdatedTodos = [...prevState.todos];\n\n      UpdatedTodos.splice(indexTODelete, 1);\n\n      return ({\n        ...prevState,\n        todos: [...UpdatedTodos],\n      });\n    });\n  }\n\n  howToShowList(kindOfShow = this.state.kindOfList) {\n    let showTodos = [];\n\n    switch (kindOfShow) {\n      case 'all':\n        showTodos = [...this.state.todos];\n        break;\n      case 'active':\n        showTodos = this.state.todos.filter(todo => todo.completed === false);\n        break;\n      case 'completed':\n        showTodos = this.state.todos.filter(todo => todo.completed === true);\n        break;\n      default:\n    }\n\n    return showTodos;\n  }\n\n  changeKindOfList(action) {\n    if (action.target.tagName === 'A') {\n      const kindOfShow = action.target.href.match(/#+\\/[a-z]+/gi)\n        .join('').match(/[a-z]/gi).join('');\n\n      this.setState({ kindOfList: kindOfShow });\n    }\n  }\n\n  changeTodoStatus(todo) {\n    this.setState((prevState) => {\n      const index = prevState.todos.findIndex(todoItem => (\n        todoItem.id === todo.id\n      ));\n      const changeTodos = [...prevState.todos];\n\n      changeTodos[index].completed = !changeTodos[index].completed;\n\n      return ({ ...prevState, todos: [...changeTodos] });\n    });\n  }\n\n  changeTitleOfTodo(todo, title) {\n    if (title === '') {\n      this.destroyTodo(todo);\n    } else {\n      const { todos } = this.state;\n      const index = todos.findIndex(todoItem => todoItem.id === todo.id);\n\n      this.setState((prevState) => {\n        const changebleTodos = [...prevState.todos];\n\n        changebleTodos[index].title = title;\n\n        return ({ ...prevState, todos: changebleTodos });\n      });\n    }\n  }\n\n  allCompleted() {\n    const { todos } = this.state;\n    let completeBool = true;\n\n    if (todos.every(todo => todo.completed)) {\n      completeBool = false;\n    }\n\n    this.setState((prevState) => {\n      const changebleTodo = [...prevState.todos];\n\n      changebleTodo.forEach((todo) => {\n        const tempTodo = todo;\n\n        tempTodo.completed = completeBool;\n      });\n\n      return ({ ...prevState, todos: [...changebleTodo] });\n    });\n  }\n\n  deleteCompleted() {\n    this.setState((prevState) => {\n      const changebleTodos = prevState.todos.filter(todo => !todo.completed);\n\n      return ({ ...prevState, todos: [...changebleTodos] });\n    });\n  }\n\n  render() {\n    const { inputValue, kindOfList, todos } = this.state;\n    const todosForShow = [...this.howToShowList(kindOfList)];\n    const counterLeftToDo = this.countHowMuchLeftToDo();\n    const { state } = this;\n\n    localStorage.setItem('state', JSON.stringify(state));\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.AddTodo}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={inputValue}\n              onChange={this.changeTodoInput}\n            />\n          </form>\n        </header>\n        <section\n          className=\"main\"\n          style={\n            todos.length !== 0 ? { display: 'block' } : { display: 'none' }\n          }\n        >\n          <label\n            htmlFor=\"toggle-all\"\n            className={\n              `label-toggle-all ${\n                todos.every(todo => todo.completed)\n                  ? 'label-toggle-all-checked'\n                  : ''\n              }`\n            }\n          >\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={this.allCompleted}\n              // checked={todos.every(todo => todo.completed)}\n            />\n          </label>\n\n          <ul className=\"todo-list\">\n            {\n              todosForShow.map(\n                todo => (\n                  <TodoItem\n                    todo={todo}\n                    key={todo.id}\n                    change={this.changeTodoStatus}\n                    destroy={this.destroyTodo}\n                    changeTitle={this.changeTitleOfTodo}\n                  />\n                )\n              )\n            }\n          </ul>\n        </section>\n        <footer\n          className=\"footer\"\n          style={\n            todos.length !== 0 ? { display: 'block' } : { display: 'none' }\n          }\n        >\n          <span className=\"todo-count\">\n            {`${counterLeftToDo} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/all\"\n                className={kindOfList === 'all' ? 'selected' : ''}\n                onClick={this.changeKindOfList}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={kindOfList === 'active' ? 'selected' : ''}\n                onClick={this.changeKindOfList}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={kindOfList === 'completed' ? 'selected' : ''}\n                onClick={this.changeKindOfList}\n              >\n                Completed\n              </a>\n            </li>\n\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.deleteCompleted}\n          >\n            {todos.some(todo => todo.completed) ? 'Clear-completed' : ''}\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}